<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="JaCoCo Coverage Report"><sessioninfo id="gaertner-bfcad179" start="1683301182401" dump="1683301182690"/><package name="edu/hm/gaertner/simon/lab23/a41"><class name="edu/hm/gaertner/simon/lab23/a41/TriPredicate" sourcefilename="TriPredicate.java"/><class name="edu/hm/gaertner/simon/lab23/a41/TriElement" sourcefilename="TriElement.java"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$static$3" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z" line="28"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$2" desc="(Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;)Z" line="23"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$1" desc="(Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;)Z" line="18"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$0" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z" line="13"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="90"/><counter type="BRANCH" missed="0" covered="38"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="24"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="TriElement.java"><line nr="8" mi="3" ci="0" mb="0" cb="0"/><line nr="13" mi="0" ci="26" mb="0" cb="12"/><line nr="18" mi="0" ci="16" mb="0" cb="4"/><line nr="23" mi="0" ci="33" mb="0" cb="18"/><line nr="28" mi="0" ci="15" mb="0" cb="4"/><counter type="INSTRUCTION" missed="3" covered="90"/><counter type="BRANCH" missed="0" covered="38"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="24"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TriPredicate.java"/><counter type="INSTRUCTION" missed="3" covered="90"/><counter type="BRANCH" missed="0" covered="38"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="24"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></package><counter type="INSTRUCTION" missed="3" covered="90"/><counter type="BRANCH" missed="0" covered="38"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="24"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></report>