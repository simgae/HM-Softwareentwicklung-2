<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="JaCoCo Coverage Report"><sessioninfo id="gaertner-b33caa49" start="1683276812334" dump="1683276812594"/><package name="edu/hm/gaertner/simon/lab23/a44"><class name="edu/hm/gaertner/simon/lab23/a44/Which" sourcefilename="Which.java"><method name="&lt;clinit&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="edu/hm/gaertner/simon/lab23/a44/ListOps" sourcefilename="ListOps.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="22"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elements" desc="()Ljava/util/List;" line="32"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fold" desc="(ILjava/util/function/BinaryOperator;)Ljava/lang/Object;" line="44"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="spread" desc="(Ljava/util/function/Function;)Ledu/hm/gaertner/simon/lab23/a44/ListOps;" line="72"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="moved" desc="(Ljava/util/function/BinaryOperator;)Ledu/hm/gaertner/simon/lab23/a44/ListOps;" line="89"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="are" desc="(Ledu/hm/gaertner/simon/lab23/a44/Which;Ljava/util/function/Predicate;)Z" line="109"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="188" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="37" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="ListOps.java"><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="23" mi="6" ci="0" mb="0" cb="0"/><line nr="24" mi="1" ci="0" mb="0" cb="0"/><line nr="32" mi="4" ci="0" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="5" ci="0" mb="2" cb="0"/><line nr="48" mi="5" ci="0" mb="0" cb="0"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="7" ci="0" mb="2" cb="0"/><line nr="52" mi="7" ci="0" mb="0" cb="0"/><line nr="53" mi="5" ci="0" mb="0" cb="0"/><line nr="57" mi="11" ci="0" mb="2" cb="0"/><line nr="58" mi="8" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="10" ci="0" mb="2" cb="0"/><line nr="75" mi="7" ci="0" mb="0" cb="0"/><line nr="76" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="5" ci="0" mb="0" cb="0"/><line nr="89" mi="6" ci="0" mb="0" cb="0"/><line nr="91" mi="10" ci="0" mb="2" cb="0"/><line nr="92" mi="17" ci="0" mb="0" cb="0"/><line nr="93" mi="1" ci="0" mb="0" cb="0"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="10" ci="0" mb="2" cb="0"/><line nr="112" mi="4" ci="0" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="2" cb="0"/><line nr="114" mi="1" ci="0" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="118" mi="9" ci="0" mb="4" cb="0"/><line nr="119" mi="3" ci="0" mb="0" cb="0"/><line nr="120" mi="6" ci="0" mb="4" cb="0"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><line nr="123" mi="10" ci="0" mb="4" cb="0"/><line nr="126" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="188" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="37" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Which.java"><line nr="6" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="6" ci="0" mb="0" cb="0"/><line nr="15" mi="6" ci="0" mb="0" cb="0"/><line nr="19" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="209" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="41" covered="0"/><counter type="COMPLEXITY" missed="20" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="2" covered="0"/></package><counter type="INSTRUCTION" missed="209" covered="0"/><counter type="BRANCH" missed="26" covered="0"/><counter type="LINE" missed="41" covered="0"/><counter type="COMPLEXITY" missed="20" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="2" covered="0"/></report>